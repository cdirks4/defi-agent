generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model UserInteraction {
  id          String   @id @default(cuid())
  userId      String
  message     String
  response    String
  embedding   Unsupported("vector(1536)")
  metadata    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cacheKey    String?  @unique // Add cache key for Redis

  @@index([userId])
}

model TradeHistory {
  id          String   @id @default(cuid())
  userId      String
  txHash      String
  tokenSymbol String
  amount      String
  price       String
  type        String
  status      String
  createdAt   DateTime @default(now())

  @@index([userId])
}

model SimulationHistory {
  id            String   @id @default(cuid())
  userId        String
  startDate     DateTime
  endDate       DateTime
  token0        String
  token1        String
  trades        Json     // Store simulated trades
  metrics       Json     // Store simulation metrics
  marketContext Json     // Store market analysis
  createdAt     DateTime @default(now())

  @@index([userId])
}

model Embedding {
  id          Int      @id @default(autoincrement())
  vector      Unsupported("vector(1536)")
  content     String
  metadata    Json?
  createdAt   DateTime @default(now())

  @@map("embeddings")
}

model Item {
  id                Int                     @id @default(autoincrement())
  embedding         Unsupported("vector(3)")
  binary_embedding  String?                 @db.Bit(3)

  @@map("prisma_items")
}

model SimulationResult {
  id        String   @id @default(cuid())
  userId    String
  startDate DateTime
  endDate   DateTime
  token0    String
  token1    String
  result    Json
  vector    String?  // For storing embeddings
  content   String?  // For storing raw data
  metadata  Json?    // For storing additional metadata
  createdAt DateTime @default(now())
}
